[{"D:\\boilermake\\frontend\\boiler\\src\\App.js":"1","D:\\boilermake\\frontend\\boiler\\src\\Components\\Unit\\Unit.js":"2","D:\\boilermake\\frontend\\boiler\\src\\Components\\Grids\\Grids.js":"3","D:\\boilermake\\frontend\\boiler\\src\\index.js":"4","D:\\boilermake\\frontend\\boiler\\src\\Components\\Settings\\Settings.js":"5"},{"size":2019,"mtime":1611487831094,"results":"6","hashOfConfig":"7"},{"size":286,"mtime":1611479670165,"results":"8","hashOfConfig":"7"},{"size":1834,"mtime":1611487785304,"results":"9","hashOfConfig":"7"},{"size":645,"mtime":1611432206834,"results":"10","hashOfConfig":"7"},{"size":5152,"mtime":1611488120521,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"i7mn52",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\boilermake\\frontend\\boiler\\src\\App.js",[],"D:\\boilermake\\frontend\\boiler\\src\\Components\\Unit\\Unit.js",[],"D:\\boilermake\\frontend\\boiler\\src\\Components\\Grids\\Grids.js",["23"],"import React, {useEffect } from 'react';\r\nimport Unit from '../Unit/Unit';\r\n\r\nconst getGridSize = (state) => {\r\n    \r\n    const initTime = 60;\r\n    const breadth = parseInt(state.area/state.length);\r\n\r\n    const sizeOfUnit = ((state.speed/60)*initTime)*state.implWidth;\r\n\r\n    const numRowUnits = parseInt((1/sizeOfUnit)*state.length);\r\n    const numColUnits = parseInt((1/sizeOfUnit)*breadth);\r\n\r\n    return [numRowUnits, numColUnits, sizeOfUnit];\r\n}\r\n\r\nconst toggleRed = (i, j, obstacles, setObstacles) => {\r\n    const element = document.getElementById(`${i}-${j}`);\r\n    if(element.classList.contains('obstacle')){\r\n        element.classList.remove('obstacle');\r\n        setObstacles(obstacles-1);\r\n    }\r\n    else{\r\n        element.classList.add('obstacle');\r\n        setObstacles(obstacles+1);\r\n    }\r\n}\r\n\r\nconst createGrid = (row, col, obstacles, setObstacles) => {\r\n    let data = [];\r\n    for(let i = 0; i<col; i++){\r\n        let eachRow = [];\r\n        for(let j = 0; j<row; j++){\r\n            eachRow.push( <Unit size='1' color='white' id={`${i}-${j}`} key={`${i}-${j}`} onClick={() => toggleRed(i, j, obstacles, setObstacles)}/>)\r\n        }\r\n        data.push(<div key={`row-${i}`} id={`row-${i}`} style={{display:\"flex\", flexDirection:\"row\"}}>{eachRow}</div>)\r\n    }\r\n    return data;\r\n}\r\n\r\nfunction Grids(props){\r\n\r\n    \r\n    useEffect(() => {\r\n        props.setGridSize(getGridSize(props.state));\r\n    }, [props.state])\r\n\r\n\r\n/*<div style={{display:\"flex\", flexDirection:\"row\"}}>\r\n            <Unit size='1' color='black'/>\r\n            <Unit size='1' color='black'/>\r\n        </div>*/\r\n    return <div style={{display:\"flex\", flexDirection:\"column\", width:'100%', minHeight:'200px'}}>\r\n        {createGrid(props.gridSize[0], props.gridSize[1], props.obstacles, props.setObstacles)}\r\n    </div>\r\n}\r\n\r\nexport default Grids;","D:\\boilermake\\frontend\\boiler\\src\\index.js",[],"D:\\boilermake\\frontend\\boiler\\src\\Components\\Settings\\Settings.js",[],{"ruleId":"24","severity":1,"message":"25","line":46,"column":8,"nodeType":"26","endLine":46,"endColumn":21,"suggestions":"27"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["28"],{"desc":"29","fix":"30"},"Update the dependencies array to be: [props, props.state]",{"range":"31","text":"32"},[1418,1431],"[props, props.state]"]